//本用例是测试startjion step，
//预置条件：三张表进行startjoin，输出时不显示字段名称，结果是error类型.使用第一张表作为事实表，后两张表为维表
//预期结果为：三张表的合集
{
    "case":[
    //创建第一个cdc：字段：name，age
    	{
			"action":"create,cdc",
            "api":"/api/schemas",
            "sleepTime":"0",
            "data":"data/cdc_1.json",
			"status":"201",
            "expect":""
        },
        //创建第二个cdc：字段：name，sex
        {
			"action":"create,cdc",
            "api":"/api/schemas",
            "sleepTime":"0",
            "data":"data/cdc_2.json",
			"status":"201",
            "expect":""
        },
        //创建第三个cdc：字段：name，height
        {
			"action":"create,cdc",
            "api":"/api/schemas",
            "sleepTime":"0",
            "data":"data/cdc_3.json",
			"status":"201",
            "expect":""
        },
        //创建输出cdc：字段：name，age，sex，height
        {
			"action":"create,cdc",
            "api":"/api/schemas",
            "sleepTime":"0",
            "data":"data/cdc_4.json",
			"status":"201",
            "expect":""
        },
        //创建第一个cdo：字段：name，age对应第一个cdc
        {
			"action":"create,cdo",
            "api":"/api/datasets",
            "sleepTime":"0",
            "data":"data/cdo_1.json",
			"status":"201",
            "expect":""
        },
        //创建第二个cdo：字段：name，sex对应第二个cdc
        {
			"action":"create,cdo",
            "api":"/api/datasets",
            "sleepTime":"0",
            "data":"data/cdo_2.json",
			"status":"201",
            "expect":""
        },
        //创建第三个cdo：字段：name，height对应第三个cdc
        {
			"action":"create,cdo",
            "api":"/api/datasets",
            "sleepTime":"0",
            "data":"data/cdo_3.json",
			"status":"201",
            "expect":""
        },
        //创建输出cdo：字段：name，age对应第一个cdc
        {
			"action":"create,cdo",
            "api":"/api/datasets",
            "sleepTime":"0",
            "data":"data/cdo_4.json",
			"status":"201",
            "expect":""
        },
        //创建dataflow，实现三张表的startjoin
      	{
			"action":"create,dataflow",
            "api":"/api/flows",
            "sleepTime":"0",
            "data":"data/dataflow_1.json",
			"status":"200",
            "expect":""
        },
        //创建一个计划，单次执行上面的dataflow
        {
            "action":"create,scheduler,dataflow",
            "api":"/api/schedulers",
            "sleepTime":"2000",
            "data":"data/scheduler_1.json",
            "status":"201",
            "expect":""
        },
        //监控这个计划的执行情况
        {
            "action":"monitor,schedule_startjoin_error",
            "api":"/api/executions",
            "sleepTime":"1000",
            "data":"",
			"status":"200",
            "expect":""
        },
        //判断是否与预期结果相同
        {
        	"action":"preview,cdo_startjoin_out_error,100",
            "api":"/api/datasets",
             "sleepTime":"3000",
            "data":"",
            "status":"200",
            "expect":"expect/expect_result1.json"
        },
        //删除包括服务器在内的这个流程的相关痕迹，不包括数据
         {
    "action" : "delete,all-server",
    "api" : "",
    "status" : "200",
    "sleepTime":"1000",
    "data":"",
    "expect":""
}
   	]
}
