//本用例是测试长的dataflow
//预置条件：四个step，一个starjoin汇聚三个cdo，在经过union去重复，与一个aggregate的approxCountDistinct函数结果进行join得到最后结果输出
//预期结果为：四张表的合集
{
    "case":[
    //创建第一个cdc：字段：name，age
    	{
			"action":"create,cdc",
            "api":"/api/schemas",
            "sleepTime":"0",
            "data":"data/cdc_1.json",
			"status":"201",
            "expect":""
        },
        //创建第二个cdc：字段：sex1，name1，
        {
			"action":"create,cdc",
            "api":"/api/schemas",
            "sleepTime":"0",
            "data":"data/cdc_2.json",
			"status":"201",
            "expect":""
        },
        //创建第三个cdc：字段：name2，height2
        {
			"action":"create,cdc",
            "api":"/api/schemas",
            "sleepTime":"0",
            "data":"data/cdc_3.json",
			"status":"201",
            "expect":""
        },
        //创建输出cdo：字段：name_agg，count_agg
        {
			"action":"create,cdc",
            "api":"/api/schemas",
            "sleepTime":"0",
            "data":"data/cdc_4.json",
			"status":"201",
            "expect":""
        },
         //创建输出cdc：字段：name0，age0，sex1，name1，name2，height2，name_agg，count_agg
        {
			"action":"create,cdc",
            "api":"/api/schemas",
            "sleepTime":"0",
            "data":"data/cdc_5.json",
			"status":"201",
            "expect":""
        },
        //创建第一个cdo：字段：name0，age0
        {
			"action":"create,cdo",
            "api":"/api/datasets",
            "sleepTime":"0",
            "data":"data/cdo_1.json",
			"status":"201",
            "expect":""
        },
        //创建第二个cdo：字段：，sex1，name1对应第二个cdc
        {
			"action":"create,cdo",
            "api":"/api/datasets",
            "sleepTime":"0",
            "data":"data/cdo_2.json",
			"status":"201",
            "expect":""
        },
        //创建第三个cdo：字段：，name2，height2，对应第三个cdc
        {
			"action":"create,cdo",
            "api":"/api/datasets",
            "sleepTime":"0",
            "data":"data/cdo_3.json",
			"status":"201",
            "expect":""
        },
        //创建第四个cdo：字段：name_agg，count_agg对应第四个cdc
        {
			"action":"create,cdo",
            "api":"/api/datasets",
            "sleepTime":"0",
            "data":"data/cdo_4.json",
			"status":"201",
            "expect":""
        },
        //创建输出cdo：字段：name0，age0，sex1，name1，name2，height2，name_agg，count_agg对应第五个cdc
        {
			"action":"create,cdo",
            "api":"/api/datasets",
            "sleepTime":"0",
            "data":"data/cdo_5.json",
			"status":"201",
            "expect":""
        },
        //创建dataflow，实现四张表的startjoin
      	{
			"action":"create,dataflow",
            "api":"/api/flows",
            "sleepTime":"0",
            "data":"data/dataflow_1.json",
			"status":"200",
            "expect":""
        },
        //创建计划
        {
            "action":"create,scheduler,dataflow",
            "api":"/api/schedulers",
            "sleepTime":"3000",
            "data":"data/scheduler_1.json",
            "status":"201",
            "expect":""
        },
        //实现监控计划执行情况
        {
            "action":"monitor,schedule_more_dataflow",
            "api":"/api/executions",
            "sleepTime":"3000",
            "data":"",
			"status":"200",
            "expect":""
        },
        //预期结果和输出的结果进行对比
        {
        	"action":"preview,cdo_dataflow_more_out,100",
            "api":"/api/datasets",
             "sleepTime":"3000",
            "data":"",
            "status":"200",
            "expect":"expect/expect_result1.json"
        },
        //删除相关信息
        {
        	"action" : "delete,all-server",
        	"api" : "",
        	"sleepTime":"3000",
        	"data":"",
        	"status" : "200",
        	 "expect":""
       }
   	]
}
