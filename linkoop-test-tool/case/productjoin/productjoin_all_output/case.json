//本用例是测试productjoin step
//预置条件：两个数据集存在相同数据
//预期结果：dataflow执行成功，且结果为left outer join
 {
	"case" :[	
	//创建source的cdc
	{
			"action" : "create,cdc",
			"api" : "/api/schemas",
			"sleepTime" : "0",
			"data" : "data/schema_productjoin_in.json",
			"status" : "201",
			"expect" : ""
					
	   },
	   //查询source的cdc
	   {
		"action":"query,cdc,schema_productjoin_in",
		"api":"/api/schemas",
        "sleepTime":"0",
        "data":"",
		"status":"200",
		"expect" : "expect/expect_schema_productjoin_in.json"
		
     	},
     	//创建source的cdo
     	{
			"action" : "create,cdo",
			"api" :  "/api/datasets",
			"sleepTime" : "0",
			"data" : "data/dataset_productjoin_all_in.json",
			"status" : "201",
			"expect" : ""
					
	   },
	   //查询source的cdo
	   {
		"action":"query,cdo,dataset_productjoin_all_in",
		"api":"/api/datasets",
        "sleepTime":"0",
        "data":"",
		"status":"200",
		"expect" : "expect/expect_dataset_productjoin_all_in.json"
		
     	},
     		//创建source1的cdo
     	{
			"action" : "create,cdo",
			"api" :  "/api/datasets",
			"sleepTime" : "0",
			"data" : "data/dataset_productjoin_all_in1.json",
			"status" : "201",
			"expect" : ""
					
	   },
	   //查询source的cdo
	   {
		"action":"query,cdo,dataset_productjoin_all_in1",
		"api":"/api/datasets",
        "sleepTime":"0",
        "data":"",
		"status":"200",
		"expect" : "expect/expect_dataset_productjoin_all_in1.json"
		
     	},
     	//创建sink的cdc
     	{
			"action":"create,cdc",
            "api":"/api/schemas",
            "sleepTime":"0",
            "data":"data/schema_productjoin_all_out.json",
			"status":"201",
            "expect":""
       },
        //查询sink的cdc
        {
		"action":"query,cdc,schema_productjoin_all_out",
		"api":"/api/schemas",
        "sleepTime":"0",
        "data":"",
		"status":"200",
		"expect" : "expect/expect_schema_productjoin_all_out.json"
		
     	},
     	//创建dataflow
       {
	    "action":"create,dataflow",
		"api":"/api/flows",
        "sleepTime":"0",
        "data":"data/dataflow_productjoin_all_output.json",
		"status":"200",
		"expect" : ""	
	  
	  }
	  ,
	  //查询dataflow
	  {
		"action":"query,dataflow,dataflow_productjoin_all_output",
		"api":"/api/flows",
        "sleepTime":"200",
        "data":"",
		"status":"200",
		"expect" : "expect/expect_dataflow_productjoin_all_output.json"
		
     	},
         {
            "action":"create,scheduler,dataflow",
            "api":"/api/schedulers",
            "sleepTime":"1000",
            "data":"data/productjoin_scheduler_all_output.json",
            "status":"201",
            "expect":""
      }, 
      {
		"action":"query,scheduler,scheduler_productjoin_all",
		"api":"/api/schedulers",
        "sleepTime":"200",
        "data":"",
		"status":"200",
		"expect" : "expect/expect_productjoin_scheduler_all_output.json"
		
     	},
     	//监控dataflow流程运行情况
        {
            "action":"monitor,scheduler_productjoin_all",
            "api":"/api/executions",
            "sleepTime":"0",
            "data":"",
			"status":"200",
            "expect":""
        },
        //预览流程运行成功后生成的cdo数据对象
         {
        	"action":"preview,dataset_productjoin_all_out,100",
            "api":"/api/datasets",
            "sleepTime":"200000",
            "data":"",
            "status":"200",
            "expect":"expect/result_cdo_out.json"
        },
	   //删除运行生成的数据
         {
    "action" : "delete,all-server",
    "api" : "",
    "status" : "200",
    "sleepTime":"1000",
    "data":"",
    "expect":""
}
       
        
       
	   ]
}